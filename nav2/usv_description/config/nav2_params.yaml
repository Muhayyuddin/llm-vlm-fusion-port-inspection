amcl:
  ros__parameters:
    use_sim_time: True
    alpha1: 0.2
    alpha2: 0.2
    alpha3: 0.2
    alpha4: 0.2
    alpha5: 0.2
    base_frame_id: "usv/base_link"
    beam_skip_distance: 0.5
    beam_skip_error_threshold: 0.9
    beam_skip_threshold: 0.3
    do_beamskip: false
    global_frame_id: "map"
    lambda_short: 0.1
    laser_likelihood_max_dist: 2.0
    laser_max_range: 100.0
    laser_min_range: 5.5
    laser_model_type: "likelihood_field"
    max_beams: 60
    max_particles: 2000
    min_particles: 500
    odom_frame_id: "odom"
    pf_err: 0.05
    pf_z: 0.99
    recovery_alpha_fast: 0.0
    recovery_alpha_slow: 0.0
    resample_interval: 1
    robot_model_type: "differential"
    save_pose_rate: 0.5
    sigma_hit: 0.2
    tf_broadcast: true
    transform_tolerance: 5.0
    update_min_a: 0.2
    update_min_d: 0.25
    z_hit: 0.5
    z_max: 0.05
    z_rand: 0.5
    z_short: 0.05
    scan_topic: scan

amcl_map_client:
  ros__parameters:
    use_sim_time: True

amcl_rclcpp_node:
  ros__parameters:
    use_sim_time: True

bt_navigator:
  ros__parameters:
    use_sim_time: True
    global_frame: map
    robot_base_frame: usv/base_link
    odom_topic: /usv/odom
    bt_loop_duration: 10
    default_server_timeout: 60   # Increased from 20 to 60 seconds
    action_server_result_timeout: 1800.0  # Increased from 900 to 1800 seconds (30 min)
    navigators: ['navigate_to_pose', 'navigate_through_poses']
    navigate_to_pose:
      ros__parameters:
        use_sim_time: True
    navigate_through_poses:
      ros__parameters:
        use_sim_time: True
    enable_groot_monitoring: True
    groot_zmq_publisher_port: 1666
    groot_zmq_server_port: 1667
    # Use default behavior tree instead of custom one
    # default_nav_to_pose_bt_xml: "/home/muhayy/mbzirc_ws/src/nav2/usv_description/config/position_only_navigation.xml"
    # 'default_nav_through_poses_bt_xml' and 'default_nav_to_pose_bt_xml' are use defaults:
    # nav2_bt_navigator/navigate_to_pose_w_replanning_and_recovery.xml
    # nav2_bt_navigator/navigate_through_poses_w_replanning_and_recovery.xml
    # They can be set here or via a RewrittenYaml remap from a parent launch file to Nav2.
    plugin_lib_names:
    - nav2_compute_path_to_pose_action_bt_node
    - nav2_compute_path_through_poses_action_bt_node
    - nav2_follow_path_action_bt_node
    - nav2_back_up_action_bt_node
    - nav2_spin_action_bt_node
    - nav2_wait_action_bt_node
    - nav2_clear_costmap_service_bt_node
    - nav2_is_stuck_condition_bt_node
    - nav2_goal_reached_condition_bt_node
    - nav2_goal_updated_condition_bt_node
    - nav2_initial_pose_received_condition_bt_node
    - nav2_reinitialize_global_localization_service_bt_node
    - nav2_rate_controller_bt_node
    - nav2_distance_controller_bt_node
    - nav2_speed_controller_bt_node
    - nav2_truncate_path_action_bt_node
    - nav2_goal_updater_node_bt_node
    - nav2_recovery_node_bt_node
    - nav2_pipeline_sequence_bt_node
    - nav2_round_robin_node_bt_node
    - nav2_transform_available_condition_bt_node
    - nav2_time_expired_condition_bt_node
    - nav2_distance_traveled_condition_bt_node
    - nav2_single_trigger_bt_node
    - nav2_is_battery_low_condition_bt_node
    - nav2_navigate_through_poses_action_bt_node
    - nav2_navigate_to_pose_action_bt_node
    - nav2_remove_passed_goals_action_bt_node
    - nav2_planner_selector_bt_node
    - nav2_controller_selector_bt_node
    - nav2_goal_checker_selector_bt_node

bt_navigator_rclcpp_node:
  ros__parameters:
    use_sim_time: True

controller_server:
  ros__parameters:
    use_sim_time: True
    controller_frequency: 10.0
    min_x_velocity_threshold: 0.0
    min_y_velocity_threshold: 0.0
    min_theta_velocity_threshold: 0.0
    failure_tolerance: 0.5
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["general_goal_checker"] # "precise_goal_checker"
    controller_plugins: ["FollowPath"]

    # Progress checker parameters - increased timeouts
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 1.0   # Increased from 0.5 to 1.0
      movement_time_allowance: 60.0   # Increased from 15.0 to 60.0 seconds
    # Goal checker parameters
    general_goal_checker:
      stateful: True
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 6.0   # Increased from 4.0 to 6.0
      yaw_goal_tolerance: 6.28 # Set to 2*pi (ignore orientation completely)
    # DWB parameters - configured to ignore path orientations
    FollowPath:
      plugin: "dwb_core::DWBLocalPlanner"
      debug_trajectory_details: True
      min_vel_x: 0.001
      min_vel_y: 0.0
      max_vel_x: 4.0      # Increased from 0.7 to 4.0 m/s
      max_vel_y: 0.0
      max_vel_theta: 2.0  # Increased from 0.4 to 2.0 rad/s
      min_speed_xy: 0.0
      max_speed_xy: 4.0   # Increased from 1.0 to 4.0 m/s
      min_speed_theta: 0.0
      acc_lim_x: 4.0      # Increased from 2.0 to 4.0
      acc_lim_y: 0.0
      acc_lim_theta: 4.0  # Increased from 2.0 to 4.0
      decel_lim_x: -8.0   # Increased from -5.5 to -8.0
      decel_lim_y: 0.0
      decel_lim_theta: -6.0  # Increased from -4.2 to -6.0
      vx_samples: 20
      vy_samples: 5
      vtheta_samples: 20
      sim_time: 3.0       # Increased from 1.7 to 3.0 for longer prediction
      linear_granularity: 0.2   # Increased from 0.05 to 0.2 (larger spacing)
      angular_granularity: 0.1  # Increased from 0.025 to 0.1 (larger spacing)
      transform_tolerance: 5.0   # Increased from 1.0 to 5.0 for better sync
      xy_goal_tolerance: 2.0     # Increased from 0.5 to 2.0
      yaw_goal_tolerance: 6.28   # Set to 2*pi (ignore orientation)
      trans_stopped_velocity: 0.5  # Increased from 0.25 to 0.5
      short_circuit_trajectory_evaluation: True
      stateful: True
      # Removed orientation-based critics, focus only on position
      critics: ["Oscillation", "BaseObstacle", "PathDist", "GoalDist"]
      BaseObstacle.scale: 0.02
      PathDist.scale: 8.0       # Reduced from 16.0, less strict path following
      GoalDist.scale: 32.0      # Increased to prioritize reaching goal
      # Removed PathAlign, GoalAlign, RotateToGoal critics to ignore orientations
      
controller_server_rclcpp_node:
  ros__parameters:
    use_sim_time: True

local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 5.0
      publish_frequency: 2.0
      global_frame: odom
      robot_base_frame: usv/base_link
      use_sim_time: True
      rolling_window: true
      width: 200
      height: 200
      resolution: 1.0
      footprint: "[ [5, 3], [5, -3], [-5, -3], [-5, 3] ]"
      transform_tolerance: 5.0
      plugins: ["voxel_layer", "inflation_layer"]
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        inflation_radius: 2.0
      voxel_layer:
        plugin: "nav2_costmap_2d::VoxelLayer"
        enabled: True
        publish_voxel_map: True
        origin_z: 0.0
        z_resolution: 0.05
        z_voxels: 16
        max_obstacle_height: 2.0
        mark_threshold: 0
        observation_sources: scan
        scan:
          topic: /usv/slot0/scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 50.0
          raytrace_min_range: 6.5
          obstacle_max_range: 50.0
          obstacle_min_range: 6.5
      always_send_full_costmap: True
  local_costmap_client:
    ros__parameters:
      use_sim_time: True
  local_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: True

global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 0.5   # Reduced from 1.0 to make map more static
      publish_frequency: 0.5  # Reduced from 1.0 to make map more static
      global_frame: map
      robot_base_frame: usv/base_link
      use_sim_time: True
      robot_radius: 5.0
      resolution: 1.0
      track_unknown_space: true
      transform_tolerance: 5.0
      plugins: ["static_layer", "inflation_layer"]
      # Temporarily disabled obstacle_layer due to timestamp issues
      #obstacle_layer:
      #  plugin: "nav2_costmap_2d::ObstacleLayer"
      #  enabled: True
      #  observation_sources: scan
      #  scan:
      #    topic: /usv/slot0/scan
      #    max_obstacle_height: 2.0
      #    clearing: True
      #    marking: True
      #    data_type: "LaserScan"
      #    raytrace_max_range: 50.0
      #    raytrace_min_range: 5.5
      #    obstacle_max_range: 50.0
      #    obstacle_min_range: 5.5
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        inflation_radius: 4.5
      always_send_full_costmap: True
  global_costmap_client:
    ros__parameters:
      use_sim_time: True
  global_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: True

map_server:
  ros__parameters:
    use_sim_time: True
    #yaml_filename: "/home/muhayy/mbzirc_ws/src/usv_description/maps/simple_map.yaml"
    #yaml_filename: "/home/muhayy/mbzirc_ws/src/nav2/usv_description/maps/my-coast.yaml"
    #yaml_filename: "/home/muhayy/mbzirc_ws/src/nav2/usv_description/maps/my-coast1.yaml"
    yaml_filename: "/home/muhayy/mbzirc_ws/src/nav2/ros2_mapping/config/map1.yaml"

map_saver:
  ros__parameters:
    use_sim_time: True
    save_map_timeout: 5.0
    free_thresh_default: 0.25
    occupied_thresh_default: 0.65
    map_subscribe_transient_local: True

planner_server:
  ros__parameters:
    planner_plugins: ["GridBased"]
    use_sim_time: True
    expected_planner_frequency: 1.0   # Reduced further to 1.0 for less frequent planning

    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"
      tolerance: 10.0       # Increased to 10.0 for maximum flexibility
      use_astar: true       # Changed to true for better pathfinding
      allow_unknown: true
      use_final_approach_orientation: false  # Ignore final orientation
planner_server_rclcpp_node:
  ros__parameters:
    use_sim_time: True

recoveries_server:
  ros__parameters:
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 10.0
    recovery_plugins: ["spin", "backup", "wait"]
    spin:
      plugin: "nav2_recoveries/Spin"
    backup:
      plugin: "nav2_recoveries/BackUp"
    wait:
      plugin: "nav2_recoveries/Wait"
    global_frame: odom
    robot_base_frame: usv/base_link
    transform_timeout: 0.1
    use_sim_time: true
    simulate_ahead_time: 2.0
    max_rotational_vel: 1.0
    min_rotational_vel: 0.4
    rotational_acc_lim: 3.2

robot_state_publisher:
  ros__parameters:
    use_sim_time: True

waypoint_follower:
  ros__parameters:
    loop_rate: 20
    stop_on_failure: false
    waypoint_task_executor_plugin: "wait_at_waypoint"   
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True
      waypoint_pause_duration: 200
      
